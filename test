private boolean ticketMatchesCardTypeConfig(Ticket ticket, FilterCardType config, String userId) {
    String edsId = ticket.getCustomer() != null ? ticket.getCustomer().getEdsId() : null;

    switch (config) {
        case READ_CUSTOMER:
            return readCustomer(ticket, userId, edsId);

        case TREATMENT_IS_LATE_DS:
            return treatmentIsLateDs(ticket, userId, edsId);

        case CUSTOMER_EDS_DS:
            return customerEdsDs(ticket, edsId);

        case REQUESTS:
            return requests(ticket, userId);

        case REQUESTS_READ_CUSTOMER:
            return requestsReadCustomer(ticket, userId);

        case CLAIMS:
            return claims(ticket, userId);

        case CLAIMS_READ_CUSTOMER:
            return claimsReadCustomer(ticket, userId);

        case APPROVALS:
            return approvals(ticket, userId);

        case DISCUSSION_GROUPS:
            return discussionGroups(ticket, userId);

        case DISCUSSION_GROUPS_READ_CUSTOMER:
            return discussionGroupsReadCustomer(ticket, userId);

        case REQUESTS_EXPERT_SERVICE:
            return requestsExpertService(ticket, userId, edsId);

        case REQUESTS_EXPERT_SERVICE_READ_CUSTOMER:
            return requestsExpertServiceReadCustomer(ticket, userId, edsId);

        case REQUESTS_EXPERT_SERVICE_TREATMENT_IS_LATE:
            return requestsExpertServiceTreatmentIsLate(ticket, userId, edsId);

        case REQUESTS_EXPERT_SERVICE_EDS:
            return requestsExpertServiceEds(ticket, edsId);

        default:
            return false;
    }
}
