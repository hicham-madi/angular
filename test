private applyReadCustomerLocally(ticket: Ticket, value: boolean): void {
  const idx = this.tickets.findIndex(t => t.id === ticket.id);
  if (idx === -1) return;

  const current = this.tickets[idx];
  let updated: Ticket = current;

  const group = current.discussionGroup;
  const users = group?.users ?? [];
  const myId = this.jwtService.getId();

  if (users.length > 0) {
    // Cas discussionGroup : on met à jour ticketRead de l'utilisateur courant
    const hasMe = users.some(u => u.id === myId);
    if (hasMe) {
      const newUsers = users.map(u =>
        u.id === myId ? { ...u, ticketRead: value } : u
      );

      updated = {
        ...current,
        discussionGroup: { ...group!, users: newUsers },
      };
    }
    // (Sinon: group présent mais sans moi -> on ne touche à rien)
  } else {
    // Pas de discussionGroup : on met à jour le flag global
    updated = { ...current, readCustomer: value };
  }

  this.tickets = [
    ...this.tickets.slice(0, idx),
    updated,
    ...this.tickets.slice(idx + 1),
  ];

  this.cdr.markForCheck();
}
