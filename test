public Page<Ticket> findMatchingTickets(String envId, String customerId, String edsId, Predicate<Object, Ticket> predicate, Pageable pageable) {
    // 1. Récupération des tickets filtrés depuis Hazelcast
    List<Ticket> allTickets = new ArrayList<>(
        this.filterByViewsTypeAndPredicate(
            envId,
            List.of(InMemoryViewEnum.ON_GOING, InMemoryViewEnum.TO_PROCESS),
            predicate
        )
    );

    // 2. Pagination en mémoire (limitée au strict nécessaire)
    int fromIndex = (int) pageable.getOffset();
    int toIndex = Math.min(fromIndex + pageable.getPageSize(), allTickets.size());

    List<Ticket> paginatedTickets = fromIndex >= toIndex
        ? Collections.emptyList()
        : allTickets.subList(fromIndex, toIndex);

    return new PageImpl<>(paginatedTickets, pageable, allTickets.size());
}
