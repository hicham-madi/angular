// app routing (ou module racine)
RouterModule.forRoot(routes, {
  onSameUrlNavigation: 'reload'
});

// ta route liste
{
  path: 'ticket-list/regional-fund-list',
  loadComponent: () => import(...).then(m => m.TicketListPageComponent),
  resolve: { prefetch: TicketListResolver },
  runGuardsAndResolvers: 'always',   // ðŸ‘ˆ important
  data: { context: TicketContext.REGIONAL_FUND }
}

protected onHeaderTabClick(): void {
  const next = this.currentTab === 'ongoing' ? 'completed' : 'ongoing';

  // nettoie lâ€™Ã©tat local minimal avant navigation (facultatif)
  this.activeCard = null!;
  localStorage.removeItem('lastSelectedCard');

  this.router.navigate([], {
    relativeTo: this.route,
    queryParams: { tab: next, card: null, ts: Date.now() }, // ts pour Ãªtre sÃ»r que lâ€™URL change
    queryParamsHandling: 'merge'
  });
}

public ngOnInit(): void {
  const data = this.route.snapshot.data['prefetch'] as TicketListPrefetch;
  const tab = this.route.snapshot.queryParamMap.get('tab') as 'ongoing' | 'completed' | null;

  this.bootstrapFromPrefetch(data);
  if (tab) this.currentTab = tab;
}

private bootstrapFromPrefetch(data: TicketListPrefetch): void {
  // <= le contenu actuel de ton ngOnInit (affectations env, context, columns, hydrateâ€¦)
}
