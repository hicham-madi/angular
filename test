private boolean evaluateHazelcastPredicate(com.hazelcast.query.Predicate<Object, Ticket> predicate, Ticket ticket) {
    return predicate.apply(Map.entry(UUID.randomUUID(), ticket));
}

CARD_TYPE_PREDICATES.put(FilterCardType.READ_CUSTOMER, (ticket, userId, edsId) -> {
    return new TicketStatsService().evaluateHazelcastPredicate(
        TicketCriteria.readCustomer(userId, edsId, List.of(), false), ticket
    );
});

CARD_TYPE_PREDICATES.put(FilterCardType.TREATMENT_IS_LATE_DS, (ticket, userId, edsId) -> {
    return new TicketStatsService().evaluateHazelcastPredicate(
        TicketCriteria.treatmentIsLateDsPredicate(userId, edsId, List.of(), false), ticket
    );
});

public boolean ticketMatchesCardTypeConfig(Ticket ticket, FilterCardType cardType, String userId, String edsId) {
    PredicateContextual predicate = CARD_TYPE_PREDICATES.get(cardType);
    return predicate != null && predicate.test(ticket, userId, edsId);
}
