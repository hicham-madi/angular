loadTicketsByCard(type: FilterCardType, page: number = 0): Observable<MbotListV2<Ticket>> {
  const params = this.buildParamsForCardType(type);
  params.currentPage = page; // ðŸ‘ˆ injecte la pagination ici

  return this.ticketService.getTicketListV2(params);
}

const page = this.currentPage + 1;
const params = this.listService.getCurrentParams(); // ne sera utilisÃ© que si aucune carte active
params.currentPage = page;

const observable = this.activeCard && this.activeCard !== FilterCardType.NONE
  ? this.cardConfigFactory.loadTicketsByCard(this.activeCard, page)
  : this.mbotService.getTicketListV2(params);

observable.subscribe({
  next: (response) => {
    this.handleTicketResponse(response);
  },
  error: (err) => {
    console.error('Erreur lors du scroll :', err);
  },
  complete: () => {
    this.isLoading = false;
  }
});
