public List<Ticket> findMatchingTickets(String envId, String customerId) {
    Predicate<?, ?> predicate = Predicates.or(
        // Bloc 1 : discussionGroup
        Predicates.equal("discussionGroup.users._id", customerId),

        // Bloc 2 : approvals
        Predicates.and(
            Predicates.equal("approval.manager", customerId),
            Predicates.or(
                Predicates.equal("status", "APPROVAL_PENDING"),
                Predicates.and(
                    Predicates.equal("status", "APPROVAL_REFUSED"),
                    Predicates.equal("approval.discussion", true)
                )
            )
        ),

        // Bloc 3 : codes D, DC, RC
        Predicates.and(
            Predicates.in("claimType.code", "D", "DC", "RC"),
            Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.equal("customer._id", customerId)
        ),

        // Bloc 4 : code DS
        Predicates.and(
            Predicates.equal("claimType.code", "DS"),
            Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.or(
                Predicates.equal("ds.collabTreatmentDone", false),
                Predicates.and(
                    Predicates.equal("ds.collabTreatmentDone", true),
                    Predicates.equal("readCustomer", false)
                )
            ),
            Predicates.or(
                Predicates.equal("customer._id", customerId),
                Predicates.and(
                    Predicates.equal("customer.eds", true),
                    Predicates.equal("customer.edsId", "88200-005Q1")
                )
            )
        )
    );

    List<Ticket> allTickets = new ArrayList<>();
    allTickets.addAll(this.filterByViewsTypeAndPredicate(
        envId,
        Arrays.asList(InMemoryViewEnum.ON_GOING, InMemoryViewEnum.TO_PROCESS),
        predicate
    ));

    return allTickets.stream().distinct().toList();
}
