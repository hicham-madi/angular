ngOnInit(): void {
  this.route.queryParamMap.subscribe((params) => {
    const cardType = params.get('card') as FilterCardType;
    if (cardType) {
      this.onCardClicked(cardType, TicketContext.SOLICITATIONS); // ou TEAM si c‚Äôest le contexte
    }
  });
}

constructor(private router: Router, private route: ActivatedRoute) {}

protected onCardClicked(type: FilterCardType, context: TicketContext): void {
  this.cardClickedOnce = true;

  // üü° Mise √† jour de l'URL
  this.router.navigate([], {
    relativeTo: this.route,
    queryParams: { card: type },
    queryParamsHandling: 'merge',
  });

  this.currentPage = 0;
  this.scrollCompleted = false;
  this.tickets = [];
  this.ticketsCountTeam = 0;

  if (this.activeCard === type) {
    this.activeCard = FilterCardType.NONE;
    this.loadFullTicketList(context);
  } else {
    this.activeCard = type;
    this.cardConfigFactory.loadTicketsByCard(type, context).subscribe({
      next: (response) => this.handleTicketResponse(response, context),
      error: (err) => console.error('Erreur lors du chargement des tickets pour la carte s√©lectionn√©e :', err),
    });
  }
}
