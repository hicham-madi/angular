<!-- ticket-list-page.component.html -->
<form [formGroup]="dateRange" class="range-wrapper">
  <mat-date-range-input [formGroup]="dateRange" [rangePicker]="picker" [min]="min" [max]="max">
    <input matStartDate formControlName="start" placeholder="JJ/MM/AAAA" [readonly]="true" />
    <input matEndDate   formControlName="end"   placeholder="JJ/MM/AAAA" [readonly]="true" />
  </mat-date-range-input>

  <button type="button" class="icon-btn" (click)="picker.open()">
    <span class="material-symbols-outlined">event</span>
  </button>

  <mat-date-range-picker #picker (closed)="onDateRangeChange()"></mat-date-range-picker>
</form>

import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-ticket-list-page',
  templateUrl: './ticket-list-page.component.html'
})
export class TicketListPageComponent implements OnInit {

  min = new Date(2000, 0, 1);
  max = new Date(2100, 11, 31);

  dateRange = new FormGroup({
    start: new FormControl<Date | null>(null),
    end: new FormControl<Date | null>(null),
  });

  ngOnInit(): void {
    const today = new Date();
    const past = new Date();
    past.setDate(today.getDate() - 90);

    this.dateRange.setValue({ start: past, end: today }, { emitEvent: false });
  }

  onDateRangeChange(): void {
    const { start, end } = this.dateRange.value;
    console.log('Date range sélectionné:', start, end);

    // Exemple : recharger les tickets avec ce range
    // this.ticketService.loadTickets({ start, end });
  }
}

import { ReactiveFormsModule } from '@angular/forms';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatNativeDateModule } from '@angular/material/core';

@NgModule({
  imports: [
    ReactiveFormsModule,
    MatFormFieldModule,
    MatInputModule,
    MatDatepickerModule,
    MatNativeDateModule
  ]
})
export class TicketListPageModule {}
