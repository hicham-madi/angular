public List<Ticket> findAllMatchingTickets(String customerId) {
    Predicate<?, ?> predicate = Predicates.or(
        // 1. Groupes de discussion dont le manager est customerId
        Predicates.equal("discussionGroup.manager.id", customerId),

        // 2. Approbations en cours avec discussion = true
        Predicates.and(
            Predicates.in("status", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.equal("approval.discussion", true),
            Predicates.equal("customer.id", customerId)
        ),

        // 3. Sollicitations DC/RC en tant que manager
        Predicates.and(
            Predicates.equal("claimType.code", "D"),
            Predicates.in("status", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.equal("customer.id", customerId)
        ),

        // 4. Sollicitations DS de type D pour customerId avec statut classique
        Predicates.and(
            Predicates.equal("claimType.code", "D"),
            Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.equal("customer.id", customerId)
        ),

        // 5. Sollicitations DS de type R pour customerId avec statut classique
        Predicates.and(
            Predicates.equal("claimType.code", "R"),
            Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.equal("customer.id", customerId)
        ),

        // 6. Tickets non lus : readCustomer = false + colaTreatmentDone != true
        Predicates.and(
            Predicates.equal("customer.id", customerId),
            Predicates.equal("readCustomer", false),
            Predicates.or(
                Predicates.notEqual("ds.colaTreatmentDone", true),
                Predicates.equal("ds.colaTreatmentDone", null)
            )
        ),

        // 7. Tickets EDS = true
        Predicates.and(
            Predicates.equal("customer.id", customerId),
            Predicates.equal("customer.eds", true)
        )
    );

    IMap<String, Ticket> ticketMap = hazelcastInstance.getMap("tickets");

    return new ArrayList<>(ticketMap.values(predicate));
}
