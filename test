protected onCardClicked(type: FilterCardType, context: TicketContext): void {
  this.cardClickedOnce = true;

  // Mise à jour de l’URL
  if (this.activeCard === type) {
    // Désélection de la carte → suppression du paramètre
    this.router.navigate([], {
      relativeTo: this.route,
      queryParams: { card: null },
      queryParamsHandling: 'merge',
    });
    this.activeCard = FilterCardType.NONE;
  } else {
    // Sélection d'une nouvelle carte → ajout dans l'URL
    this.router.navigate([], {
      relativeTo: this.route,
      queryParams: { card: type },
      queryParamsHandling: 'merge',
    });
    this.activeCard = type;
  }

  this.currentPage = 0;
  this.scrollCompleted = false;
  this.tickets = [];
  this.ticketsCountTeam = 0;

  if (this.activeCard === FilterCardType.NONE) {
    this.loadFullTicketList(context);
  } else {
    this.cardConfigFactory.loadTicketsByCard(type, context).subscribe({
      next: (response) => {
        this.handleTicketResponse(response, context);
      },
      error: (err) => console.error('Erreur lors du chargement des tickets pour la carte sélectionnée :', err),
    });
  }
}
