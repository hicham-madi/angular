private boolean discussionGroups(Ticket ticket, String userId) {
    List<String> groupUserIds = ticket.getDiscussionGroupUserIds(); // Supposé getter
    return groupUserIds != null && groupUserIds.contains(userId);
}
private boolean discussionGroupsReadCustomer(Ticket ticket, String userId) {
    List<String> groupUserIds = ticket.getDiscussionGroupUserIds(); // Supposé getter
    Boolean read = ticket.getDiscussionGroupRead(); // Supposé getter

    return groupUserIds != null &&
           groupUserIds.contains(userId) &&
           Boolean.FALSE.equals(read);
}
private boolean requestsExpertService(Ticket ticket, String userId, String edsId) {
    String claimCode = ticket.getClaimType() != null ? ticket.getClaimType().getCode() : null;
    StatusTicket status = ticket.getStatus();
    Boolean collabDone = ticket.getDsCollabTreatmentDoneField();
    Boolean readCustomer = ticket.getReadCustomer();
    Boolean isCustomerEds = ticket.getCustomerEds();
    String customerEdsId = ticket.getCustomerEdsId();

    boolean baseCondition =
            ClaimTypeCode.DS.toString().equals(claimCode) &&
            List.of(
                StatusTicket.NEW,
                StatusTicket.PROCESSING,
                StatusTicket.PENDING,
                StatusTicket.APPROVAL_REFUSED
            ).contains(status) &&
            (
                Boolean.FALSE.equals(collabDone) ||
                (Boolean.TRUE.equals(collabDone) && Boolean.TRUE.equals(readCustomer))
            );

    boolean ownership =
            userId.equals(ticket.getCustomerId()) ||
            (Boolean.TRUE.equals(isCustomerEds) && edsId != null && edsId.equals(customerEdsId));

    return baseCondition && ownership;
}
private boolean requestsExpertServiceReadCustomer(Ticket ticket, String userId, String edsId) {
    String claimCode = ticket.getClaimType() != null ? ticket.getClaimType().getCode() : null;
    StatusTicket status = ticket.getStatus();
    Boolean collabDone = ticket.getDsCollabTreatmentDoneField();
    Boolean readCustomer = ticket.getReadCustomer();
    Boolean isCustomerEds = ticket.getCustomerEds();
    String customerEdsId = ticket.getCustomerEdsId();

    boolean baseCondition =
            Boolean.TRUE.equals(readCustomer) &&
            ClaimTypeCode.DS.toString().equals(claimCode) &&
            List.of(
                StatusTicket.NEW,
                StatusTicket.PROCESSING,
                StatusTicket.PENDING,
                StatusTicket.APPROVAL_REFUSED
            ).contains(status) &&
            (
                Boolean.FALSE.equals(collabDone) ||
                (Boolean.TRUE.equals(collabDone) && Boolean.FALSE.equals(readCustomer))
            );

    boolean ownership =
            userId.equals(ticket.getCustomerId()) ||
            (Boolean.TRUE.equals(isCustomerEds) && edsId != null && edsId.equals(customerEdsId));

    return baseCondition && ownership;
}
private boolean requestsExpertServiceTreatmentIsLate(Ticket ticket, String userId, String edsId) {
    String claimCode = ticket.getClaimType() != null ? ticket.getClaimType().getCode() : null;
    StatusTicket status = ticket.getStatus();
    Boolean isLate = ticket.getDsTreatmentIsLateField();
    Boolean collabDone = ticket.getDsCollabTreatmentDoneField();
    Boolean readCustomer = ticket.getReadCustomer();
    Boolean isCustomerEds = ticket.getCustomerEds();
    String customerEdsId = ticket.getCustomerEdsId();

    boolean baseCondition =
            ClaimTypeCode.DS.toString().equals(claimCode) &&
            List.of(
                StatusTicket.NEW,
                StatusTicket.PROCESSING,
                StatusTicket.PENDING,
                StatusTicket.APPROVAL_PENDING,
                StatusTicket.APPROVAL_REFUSED
            ).contains(status) &&
            Boolean.TRUE.equals(isLate);

    boolean collabCondition =
            Boolean.FALSE.equals(collabDone) ||
            (Boolean.TRUE.equals(collabDone) && Boolean.FALSE.equals(readCustomer));

    boolean ownership =
            userId.equals(ticket.getCustomerId()) ||
            (Boolean.TRUE.equals(isCustomerEds) && edsId != null && edsId.equals(customerEdsId));

    return baseCondition && collabCondition && ownership;
}
