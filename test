export enum TicketContext {
  SOLICITINGS = 'solicitings',
  TEAM = 'team',
  // ... d'autres onglets ici
}

protected onCardClicked(type: FilterCardType, context: TicketContext): void {
  this.activeCard = type;
  this.currentPage = 0;
  this.scrollCompleted = false;
  this.tickets = [];
  this.ticketsCount = 0;

  const observable = this.loadTicketsForContext(type, context);

  observable.subscribe({
    next: (response) => this.handleTicketResponse(response),
    error: (err) => console.error(`Erreur lors du chargement des tickets (${context}) :`, err),
  });
}

protected loadTicketsForContext(type: FilterCardType, context: TicketContext): Observable<MbotListV2> {
  switch (context) {
    case TicketContext.TEAM:
      return this.mbotService.getTicketsForCardInTeamTab(type);
    case TicketContext.SOLICITINGS:
    default:
      return this.cardConfigFactory.loadTicketsByCard(type);
  }
}
<metabot-dashboard-card
  class="card"
  [card]="card"
  [class]="card.variant"
  (cardClicked)="onCardClicked($event, TicketContext.TEAM)">
</metabot-dashboard-card>

import { TicketContext } from '../../models/ticket-context.enum'; // ou le bon chemin

export class TeamPageComponent extends TicketsPageBase {
  TicketContext = TicketContext; // Pour lâ€™utiliser dans le template
}
