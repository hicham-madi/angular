protected onTabChange(tabValue: string, context: TicketContext): void {
  const isOngoing = tabValue === 'ongoing';
  const base = this.getBaseListSegment(context);

  // /ticket-list  ou  /team-list  (+ /terminated-list si nécessaire)
  const commands = isOngoing ? ['/', base] : ['/', base, 'terminated-list'];

  this.router.navigate(commands, { queryParamsHandling: 'merge' });
}

private getBaseListSegment(context: TicketContext): 'ticket-list' | 'team-list' {
  switch (context) {
    case TicketContext.SOLICITATIONS:
      return 'ticket-list';

    case TicketContext.TEAM:
      return 'team-list';

    case TicketContext.TERMINATED:
      // Déduire depuis l’URL courante :
      //  - si on est sur /team-list[...] => rester sur team-list
      //  - sinon défaut sur ticket-list
      return this.router.url.includes('/team-list') ? 'team-list' : 'ticket-list';

    default:
      return 'ticket-list';
  }
}
