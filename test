public static Predicate<Object, Ticket> getAllTicketsPredicate(String customerId, String customerEdsId) {
    List<Predicate<Object, Ticket>> predicates = new ArrayList<>();

    // -- Exemple : Tickets non lus (readCustomer = false) avec statut actif et customer
    Predicate<Object, Ticket> unreadTicketsPredicate = Predicates.and(
        Predicates.equal("readCustomer", false),
        Predicates.in("claimType.code", "D", "DC", "RC"),
        Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
        Predicates.or(
            Predicates.equal("customer._id", customerId),
            Predicates.and(
                Predicates.equal("customer.eds", true),
                Predicates.equal("customer.edsId", customerEdsId)
            )
        )
    );
    predicates.add(unreadTicketsPredicate);

    // -- Exemple : Tickets en retard (ds.treatmentIsLate = true) avec statut actif et customer
    Predicate<Object, Ticket> lateTicketsPredicate = Predicates.and(
        Predicates.equal("ds.treatmentIsLate", true),
        Predicates.in("claimType.code", "DS"),
        Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
        Predicates.or(
            Predicates.equal("customer._id", customerId),
            Predicates.and(
                Predicates.equal("customer.eds", true),
                Predicates.equal("customer.edsId", customerEdsId)
            )
        )
    );
    predicates.add(lateTicketsPredicate);

    // -- Exemple : Tickets affectés à l'unité (EDS activé avec type DS)
    Predicate<Object, Ticket> unitAssignedTicketsPredicate = Predicates.and(
        Predicates.equal("customer.eds", true),
        Predicates.equal("customer.edsId", customerEdsId),
        Predicates.in("claimType.code", "DS")
    );
    predicates.add(unitAssignedTicketsPredicate);

    // -- Exemple : Approbations
    Predicate<Object, Ticket> approvalsPredicate = Predicates.and(
        Predicates.equal("approval.manager", customerId),
        Predicates.or(
            Predicates.equal("status", "APPROVAL_PENDING"),
            Predicates.and(
                Predicates.equal("status", "APPROVAL_REFUSED"),
                Predicates.equal("approval.discussion", true)
            )
        )
    );
    predicates.add(approvalsPredicate);

    // -- Exemple : Groupes de discussion
    Predicate<Object, Ticket> discussionGroupsPredicate = Predicates.equal("discussionGroup.users._id", customerId);
    predicates.add(discussionGroupsPredicate);

    // -- Exemple : Groupes de discussion non lus
    Predicate<Object, Ticket> unreadDiscussionGroupsPredicate = Predicates.and(
        Predicates.equal("discussionGroup.users._id", customerId),
        Predicates.equal("discussionGroup.users.ticketRead", false)
    );
    predicates.add(unreadDiscussionGroupsPredicate);

    // Combine toutes les conditions avec OR global (pour matcher n'importe quelle règle ci-dessus)
    return Predicates.or(predicates.toArray(new Predicate[0]));
}
