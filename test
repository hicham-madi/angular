// resolver
return forkJoin({
  env: this.mbotService.getEnvConfig(),
  tickets: this.mbotService.getTicketListV2(params)
}).pipe(
  map(({ env, tickets }) => ({
    context, initialTab, config: { displayedColumns, columnConfig }, cardType,
    tickets, env
  }))
);

// composant ngOnInit
const data = this.route.snapshot.data['prefetch'];
this.enableDiscussionGroupForCustomer = data.env?.preferences?.enableDiscussionGroupForCustomer;
this.enableDs = data.env?.preferences?.enableDs;
this.enableGlobalSearchForCustomer = data.env?.preferences?.enableGlobalSearchForCustomer;
// puis hydrate
this.hydrateFromResponse(data.tickets);
