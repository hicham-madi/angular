// add this small type (optional but clean)
type SelectOption = { id: string; label: string };

// control must hold the whole object (or null)
protected searchTypeControl = new FormControl<SelectOption | null>(null, { nonNullable: false });

// values must be objects with id & label
protected categoriesValues: SelectOption[] = [
  { id: 'customerName',  label: 'Nom de client' },
  { id: 'accountNumber', label: 'Numéro de compte' },
  { id: 'ticketNumber',  label: 'Numéro de ticket' },
];

ngOnInit(): void {
  // (Optionnel) définir une valeur par défaut
  // this.searchTypeControl.setValue(this.categoriesValues[0]);
  
  // ton code existant pour le champ texte
  this.searchTextControl.valueChanges
    .pipe(debounceTime(300), distinctUntilChanged(), takeUntilDestroyed(this.destroyRef))
    .subscribe(v => this.searchChanged.emit((v ?? '').trim()));
}

<input-control
  [label]="'Type de recherche'"
  [labelPosition]="'LEFT'"
  [control]="searchTypeControl"
  [type]="'SELECT'"
  [values]="categoriesValues">
</input-control>

<input-control
  class="search-control"
  [inputIcon]="searchTextControl.value ? 'close' : 'search'"
  [classes]="searchTextControl.value ? ['danger-color'] : []"
  [control]="searchTextControl"
  [onClick]="createSearchTextControlEmitter()"
  [labelPlaceholder]="'Rechercher...'">
</input-control>
