private boolean ticketMatchesCardTypeConfig(Ticket ticket, CardTypeConfig config, String userId) {
    switch (config) {
        case READ_CUSTOMER:
            return ticket.getReadCustomer() != null && !ticket.getReadCustomer();

        case TREATMENT_IS_LATE_DS:
            return ticket.isTreatmentLate();

        case CUSTOMER_EDS_DS:
            return ticket.getCustomerEds() != null;

        case REQUESTS:
            return ticket.getType() != null && ticket.getType().equalsIgnoreCase("REQUEST");

        case REQUESTS_READ_CUSTOMER:
            return ticket.getType() != null
                && ticket.getType().equalsIgnoreCase("REQUEST")
                && ticket.getReadCustomer() != null && !ticket.getReadCustomer();

        case CLAIMS:
            return ticket.getType() != null && ticket.getType().equalsIgnoreCase("CLAIM");

        case CLAIMS_READ_CUSTOMER:
            return ticket.getType() != null
                && ticket.getType().equalsIgnoreCase("CLAIM")
                && ticket.getReadCustomer() != null && !ticket.getReadCustomer();

        case APPROVALS:
            return ticket.getApprovalManager() != null && ticket.getApprovalManager().equals(userId);

        case DISCUSSION_GROUPS:
            return ticket.getDiscussionGroup() != null && !ticket.isTicketRead();

        case REQUEST_EXPERT_SERVICE:
            return ticket.isExpertServiceRequest();

        case REQUEST_EXPERT_SERVICE_READ_CUSTOMER:
            return ticket.isExpertServiceRequest()
                && ticket.getReadCustomer() != null && !ticket.getReadCustomer();

        case REQUEST_EXPERT_SERVICE_TREATMENT_IS_LATE:
            return ticket.isExpertServiceRequest() && ticket.isTreatmentLate();

        case REQUEST_EXPERT_SERVICE_EDS:
            return ticket.isExpertServiceRequest() && ticket.getCustomerEds() != null;

        default:
            return false;
    }
}
