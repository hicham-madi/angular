import { ActivatedRoute, Router } from '@angular/router';
import { FilterCardType } from '...';

export class TicketsPageBase {
  constructor(
    private route: ActivatedRoute,
    private router: Router,
    // ...
  ) {}

  ngOnInit(): void {
    // Au lieu d'appeler ici applyFilters() directement,
    // on se branche d'abord sur les query params :
    this.route.queryParamMap.subscribe(params => {
      const qp = (params.get('card') || '').toUpperCase();

      const card = this.mapCardParam(qp);
      if (card !== this.activeCard) {
        this.activeCard = card;
        this.currentPage = 0;
        this.scrollCompleted = false;

        if (this.activeCard === FilterCardType.NONE) {
          this.loadFullTicketList(this.context);
        } else {
          this.cardConfigFactory
            .loadTicketsByCard(this.activeCard, this.context, 0)
            .subscribe(res => this.handleTicketResponse(res, this.context));
        }
      } else {
        // Aucun param particulier â†’ chargement standard
        this.loadFullTicketList(this.context);
      }
    });
  }

  private mapCardParam(qp: string): FilterCardType {
    switch (qp) {
      case 'REQUESTS':   return FilterCardType.REQUESTS;
      case 'CLAIMS':     return FilterCardType.CLAIMS;
      case 'APPROVALS':  return FilterCardType.APPROVALS;
      default:           return FilterCardType.NONE;
    }
  }
}
