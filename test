import { Component, Input, TemplateRef, ViewChild } from '@angular/core';

@Component({
  selector: 'metabot-solicitings-page-base',
  standalone: true,
  templateUrl: './solicitings-page-base.component.html',
  styleUrls: ['./solicitings-page-base.component.scss'],
  imports: [
    // Ajoutez ici vos composants comme :
    // CommonModule, MetabotPageHeaderComponent, MetabotFilterBarComponent, MetabotSolicitingsTableComponent, etc.
  ]
})
export class SolicitingsPageBaseComponent {
  @Input() title = '';
  @Input() tickets: any[] = [];
  @Input() statusList: any[] = [];

  @Input() displayedColumns: string[] = [];
  @Input() columnConfig: any = {};
  @Input() columnTemplates: Record<string, string> = {};

  @Input() rowClick!: (row: any) => void;
  @Input() filtersTpl?: TemplateRef<any>;

  @ViewChild('defaultFilterTpl', { static: true }) defaultFilterTpl!: TemplateRef<any>;

  // Méthodes si besoin d'intercepter les événements
  onSearchChange(value: string) {}
  onStatusFilterChanged(value: string) {}
}

<div class="h-100 root">

  <!-- En-tête -->
  <metabot-page-header
    [currentCount]="tickets?.length"
    [title]="title"
  />

  <!-- Barre de filtre -->
  <metabot-filter-bar
    [statusList]="statusList"
    (searchChange)="onSearchChange($event)"
    (statusChanged)="onStatusFilterChanged($event)"
    [extraFiltersTpl]="filtersTpl || defaultFilterTpl"
  />

  <!-- Tableau -->
  <metabot-solicitings-table
    [tickets]="tickets"
    [displayedColumns]="displayedColumns"
    [columnConfig]="columnConfig"
    [columnTemplates]="columnTemplates"
    [rowClick]="rowClick"
  />

  <!-- Template par défaut vide si aucun filtre spécifique n'est fourni -->
  <ng-template #defaultFilterTpl></ng-template>

</div>
