public List<Ticket> findMatchingTickets(String envId, String customerId) {
    Predicate<?, ?> predicate = Predicates.or(
        // 1. discussionGroup.users._id == customerId
        Predicates.equal("discussionGroup.users._id", customerId),

        // 2. approval.manager == customerId && (status == APPROVAL_PENDING || status == APPROVAL_REFUSED || approval.discussion == true)
        Predicates.and(
            Predicates.equal("approval.manager", customerId),
            Predicates.or(
                Predicates.equal("status", "APPROVAL_PENDING"),
                Predicates.equal("status", "APPROVAL_REFUSED"),
                Predicates.equal("approval.discussion", true)
            )
        ),

        // 3. (claimType.code in ["D", "DC", "RC"] && status in [...] && customer._id == customerId)
        Predicates.and(
            Predicates.in("claimType.code", "D", "DC", "RC"),
            Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.equal("customer._id", customerId)
        ),

        // 4. (claimType.code == "DS" && status in [...] && (collab=false || (collab=true && readCustomer=false)))
        Predicates.and(
            Predicates.equal("claimType.code", "DS"),
            Predicates.in("status", "NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"),
            Predicates.or(
                Predicates.equal("ds.collabTreatmentDone", false),
                Predicates.and(
                    Predicates.equal("ds.collabTreatmentDone", true),
                    Predicates.equal("readCustomer", false)
                )
            )
        ),

        // 5. customer._id == customerId || (customer.eds == true && customer.edsId == "88200-00501")
        Predicates.or(
            Predicates.equal("customer._id", customerId),
            Predicates.and(
                Predicates.equal("customer.eds", true),
                Predicates.equal("customer.edsId", "88200-00501")
            )
        )
    );

    List<Ticket> allTickets = new ArrayList<>();
    allTickets.addAll(this.filterByViewsTypeAndPredicate(
        envId,
        Arrays.asList(InMemoryViewEnum.ON_GOING, InMemoryViewEnum.TO_PROCESS),
        predicate
    ));

    return allTickets.stream()
        .distinct()
        .toList();
}
