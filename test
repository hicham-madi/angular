.icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  cursor: pointer;

  mat-icon {
    font-size: 18px;
    color: #c0392b; // rouge par d√©faut
    transition: color 0.2s ease;
  }

  &:hover {
    mat-icon {
      color: #e74c3c; // rouge plus vif au hover
    }
  }
}
public class TicketSortUtils {

    public static Comparator<Ticket> getComparator(String sortKey, boolean isAsc) {
        Comparator<Ticket> comparator = switch (sortKey) {
            case "id" -> Comparator.comparing(Ticket::getId);
            case "lastUpdate" -> Comparator.comparing(Ticket::getLastUpdate);
            case "customerName" -> Comparator.comparing(ticket -> ticket.getCustomer().getName(), Comparator.nullsLast(String::compareToIgnoreCase));
            case "subject" -> Comparator.comparing(Ticket::getSubject, Comparator.nullsLast(String::compareToIgnoreCase));
            case "status" -> Comparator.comparing(Ticket::getStatus, Comparator.nullsLast(String::compareToIgnoreCase));
            case "type" -> Comparator.comparing(Ticket::getType, Comparator.nullsLast(String::compareToIgnoreCase));
            default -> null;
        };

        return (comparator != null && !isAsc) ? comparator.reversed() : comparator;
    }
}
