public List<Ticket> findMatchingTickets(String userId, String edsId) {
    PredicateBuilder builder = new PredicateBuilder();
    EntryObject e = builder.getEntryObject();

    Predicate discussionGroupPredicate = e.get("discussionGroup.users").equal(userId);

    Predicate approvalManagerPredicate = builder.getEntryObject()
        .get("approval.manager").equal(userId)
        .and(
            builder.getEntryObject()
                .get("status").equal("APPROVAL_PENDING")
                .or(
                    builder.getEntryObject()
                        .get("status").equal("APPROVAL_REFUSED")
                        .and(builder.getEntryObject().get("approval.discussion").is(true))
                )
        );

    Predicate classicClaimsPredicate = e.get("claimType.code").in("D", "DC", "RC")
        .and(e.get("status").in("NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"))
        .and(e.get("customer.id").equal(userId));

    Predicate dsClaimsPredicate = e.get("claimType.code").in("DS")
        .and(e.get("status").in("NEW", "PROCESSING", "PENDING", "APPROVAL_PENDING", "APPROVAL_REFUSED"))
        .and(
            e.get("ds.collabTreatmentDone").isFalse()
                .or(
                    e.get("ds.collabTreatmentDone").isTrue()
                        .and(e.get("readCustomer").isFalse())
                )
        )
        .and(
            e.get("customer.id").equal(userId)
                .or(
                    e.get("customer.eds").isTrue()
                        .and(e.get("customer.edsId").equal(edsId))
                )
        );

    Predicate finalPredicate = discussionGroupPredicate
        .or(approvalManagerPredicate)
        .or(classicClaimsPredicate)
        .or(dsClaimsPredicate);

    // Supposons que "tickets" est votre IMap<String, Ticket>
    return new ArrayList<>(tickets.values(finalPredicate));
}
