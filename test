private boolean isExpertService(Ticket ticket, String userId, String edsId) {
    if (ticket == null || ticket.getClaimType() == null || ticket.getStatus() == null || ticket.getCustomer() == null) {
        return false;
    }

    boolean isSameUser =
        userId != null && userId.equals(ticket.getCustomerId()) ||
        (Boolean.TRUE.equals(ticket.getCustomer().isEds()) && edsId != null && edsId.equals(ticket.getCustomer().getEdsId()));

    if (!isSameUser) {
        return false;
    }

    boolean isDS = ClaimTypeCode.DS.getCode().equals(ticket.getClaimType().getCode());

    boolean statusMatch = List.of(
        StatusTicket.NEW,
        StatusTicket.PROCESSING,
        StatusTicket.PENDING,
        StatusTicket.APPROVAL_PENDING,
        StatusTicket.APPROVAL_REFUSED
    ).contains(StatusTicket.valueOf(ticket.getStatus()));

    return isSameUser && isDS && statusMatch;
}

public static com.hazelcast.query.Predicate<Object, Ticket> requestExpertService(String userId, String edsId) {
    return Predicates.and(
        Predicates.equal(CLAIM_TYPE_CODE_FIELD, ClaimTypeCode.DS.toString()),
        Predicates.in(STATUS_FIELD,
            StatusTicket.NEW.toString(),
            StatusTicket.PROCESSING.toString(),
            StatusTicket.PENDING.toString(),
            StatusTicket.APPROVAL_PENDING.toString(),
            StatusTicket.APPROVAL_REFUSED.toString()
        ),
        Predicates.or(
            Predicates.equal(CUSTOMER_ID, userId),
            Predicates.and(
                Predicates.equal(CUSTOMER_EDS_FIELD, true),
                Predicates.equal(CUSTOMER_EDS_ID_FIELD, edsId)
            )
        )
    );
}
