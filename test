public TicketCardsDto computeStats(List<Ticket> tickets, String userId, String edsId, List<String> edsChilds, boolean isPrivate) {
    int treatmentIsLateDsCount = 0;

    for (Ticket ticket : tickets) {
        for (Map.Entry<FilterCardType, PredicateContextual> entry : CARD_TYPE_PREDICATES.entrySet()) {
            if (entry.getValue().test(ticket, userId, edsId, edsChilds, isPrivate)) {
                switch (entry.getKey()) {
                    case TREATMENT_IS_LATE_DS -> treatmentIsLateDsCount++;
                    // Ajoute ici les autres cas quand on ajoutera les autres filtres
                }
            }
        }
    }

    return TicketCardsDto.builder()
        .treatmentIsLateDs(treatmentIsLateDsCount)
        .build();
}
